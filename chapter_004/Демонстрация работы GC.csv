Первоначально в объекте User  у меня было поле userName типа String
	Без принудительного вызова сборщика мусора (System.gc) добиться вызова его не получалось,
	куча (heap) просто переполнялась и все! 
	В данном случае, поскольку объект String является ссылочным типом данных, то данный объект,
	что называется "выживал" в процессе маркировки.
	В результате чего последующая стадия "очистка" не запускалась.
Тогда я упростил структуру объекта User оставив только поля с примитивными типами int и double
при запуске кода GcUser с достаточно большим количеством объектов (Н-р 15000) куча переполняется
и происходит удаление устаревших объектов.

В целом насколько я понял зависимость такова - чем больше размер кучи, тем реже будет вызываться
сборщик мусора


Размер элемента
public User(int bilNumber, double sumMoney) {
        this.userName = "f";
        BilNumber = bilNumber;
        this.sumMoney = sumMoney;
    }

заголовок - 8 байт
ссылочная переменная  - 8 байт для 64-битной системы
объект типа String - 48 байт
объект типа int - 4 байта
объект типа double - 8 байт
Итого 8 + 8 + 48 + 4 + 8 = 80 байт

